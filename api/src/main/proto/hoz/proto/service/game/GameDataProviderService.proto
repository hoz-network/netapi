syntax = "proto3";

package hoz.proto.service.game;

option java_multiple_files = true;
option java_package = "net.hoz.api.service.game";

import "google/protobuf/empty.proto";
import "hoz/proto/Commons.proto";
import "hoz/proto/data/DataStorage.proto";

message AllGameFrameDataRequest {
  hoz.proto.GameType type = 1;
}

message GameFrameDataRequest {
  string uuid = 1;
  hoz.proto.GameType type = 2;
}

message GameFrameDataResponse {
  hoz.proto.data.GameFrameData data = 1;
  Result result = 2;
}

message GameFrameDataSaveRequest {
  hoz.proto.data.GameFrameData data = 1;
}

message GameFrameDataSaveResponse {
  string uuid = 1;
  Result result = 2;
}

message GameIdRequest {
  string gameName = 1;
  hoz.proto.GameType type = 2;
}

message GameIdResponse {
  string gameName = 1;
  string uuid = 2;
  hoz.proto.GameType type = 3;
}

message RequestDefaultData {
  hoz.proto.data.DataType dataType = 1;
  hoz.proto.GameType type = 2;
}

message DefaultDataResponse {
  hoz.proto.data.GameDataContainer container = 1;
  Result result = 2;
}

service GameDataProvider {
  rpc requestGameFrame(GameFrameDataRequest) returns (GameFrameDataResponse);
  rpc requestAllGameFrames(AllGameFrameDataRequest) returns (stream GameFrameDataResponse);
  rpc requestGameUuid(GameIdRequest) returns (GameIdResponse);

  rpc updateGameData(GameFrameDataSaveRequest) returns (GameFrameDataSaveResponse);
  rpc requestDefaultData(RequestDefaultData) returns (stream DefaultDataResponse);

  rpc listenForDataUpdates(GameUpdatesRequest) returns (stream hoz.proto.data.GameDataContainer);
  rpc listenForFrameUpdates(GameUpdatesRequest) returns (stream hoz.proto.data.GameFrameData);
}