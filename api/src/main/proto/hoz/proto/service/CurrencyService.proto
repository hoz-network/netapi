syntax = "proto3";

package hoz.proto.service;

option java_multiple_files = true;
option java_package = "net.hoz.api.service.currency";

import "google/protobuf/empty.proto";

import "hoz/proto/Commons.proto";
import "hoz/proto/data/CurrencyData.proto";

/*
Indicates new operation is sent to the BAGR for processing
*/
message CurrencyOperationRequest {
  hoz.proto.data.CurrencyOperation operation = 1;
}

/*
Operation response with result and ID of the operation
*/
message CurrencyOperationResult {
  Result result = 1;
  hoz.proto.data.CurrencyOperation operation = 2;
  int64 newCount = 3;
}

/*
Request for container with given UUID
*/
message SingleCurrencyContainerRequest {
  string uuid = 1;
}

/*
Response for single container request
*/
message SingleCurrencyContainerResult {
  Result result = 1;
  hoz.proto.data.CurrencyContainer container = 2;
}

/*
Response for all available containers request
*/
message CurrencyContainersResult {
  Result result = 1;
  repeated hoz.proto.data.CurrencyContainer containers = 2;
}

/*
Service itself :)
*/
service CurrencyService {
  /*
  Requests all available containers.
  */
  rpc getAllContainers(google.protobuf.Empty) returns (CurrencyContainersResult);
  /*
  Requests one container for one UUID in request
  */
  rpc getPlayerContainer(SingleCurrencyContainerRequest) returns (SingleCurrencyContainerResult);
  /*
  Sends new operation to the BAGR
  */
  rpc sendNewOperation(CurrencyOperationRequest) returns (CurrencyOperationResult);
  /*
  Listens for updates from BAGR
  */
  rpc listenForUpdates(google.protobuf.Empty) returns (stream SingleCurrencyContainerResult);
}