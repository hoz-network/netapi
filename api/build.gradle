plugins {
    id "com.google.protobuf" version "0.8.18"
}

apply plugin: "com.google.protobuf"

dependencies {
    //reactor
    api group: 'io.projectreactor', name: 'reactor-core', version: REACTOR_VERSION

    //grpc
    api group: 'io.rsocket.rpc', name: 'rsocket-rpc-core', version: RSOCKET_RPC_VERSION
    api group: 'io.rsocket.rpc', name: 'rsocket-rpc-protobuf', version: RSOCKET_RPC_VERSION

    //proto
    api group: 'com.google.protobuf', name: 'protobuf-java', version: PROTOBUF_VERSION

    //screamingLib
    api group: "org.screamingsandals.lib", name: "core-common", version: SLIB_VERSION
    api group: "org.screamingsandals.lib", name: "tasker-common", version: SLIB_VERSION

    //configurate
    api group: 'org.spongepowered', name: 'configurate-gson', version: CONFIGURATE_VERSION

    api group: 'com.iamceph.resulter', name: 'resulter', version: RESULTER_VERSION
}

sourceSets.configureEach{s->
    java {
        srcDir project.buildDir.toPath()
                .resolve("generatedProto")
                .resolve(s.name)
                .resolve("java")
                .toFile()

        srcDir project.buildDir.toPath()
                .resolve("generatedProto")
                .resolve(s.name)
                .resolve("grpc")
                .toFile()
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${PROTOBUF_VERSION}"
    }

    plugins {
        rsocketRpc {
            artifact = "io.rsocket.rpc:rsocket-rpc-protobuf:${RSOCKET_RPC_VERSION}"
        }
    }

    generateProtoTasks {
        all()*.plugins {
            rsocketRpc {}
        }
    }

    generatedFilesBaseDir = "${project.buildDir}/generatedProto"
}